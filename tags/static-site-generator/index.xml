<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Static-Site-Generator on All in Obsidian</title>
        <link>https://all-in-obsidian.li3huo.com/tags/static-site-generator/</link>
        <description>Recent content in Static-Site-Generator on All in Obsidian</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <managingEditor>li3huo (li3huo)</managingEditor>
        <webMaster>li3huo (li3huo)</webMaster>
        <lastBuildDate>Fri, 01 Jan 2016 00:00:00 +0000</lastBuildDate><atom:link href="https://all-in-obsidian.li3huo.com/tags/static-site-generator/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>👋 《再见，WordPress 补记》</title>
        <link>https://all-in-obsidian.li3huo.com/posts/2024/farewell-wordpress/</link>
        <pubDate>Fri, 01 Jan 2016 00:00:00 +0000</pubDate>
        <author>li3huo (li3huo)</author>
        <guid>https://all-in-obsidian.li3huo.com/posts/2024/farewell-wordpress/</guid>
        <description>
            &lt;h2 id=&#34;原因与方案&#34;&gt;原因与方案
&lt;/h2&gt;&lt;p&gt;放弃 WordPress 的最主要原因是希望降低维护成本&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没钱：vps 实例降级到内存 0.5GB 后跑不动 mysql + php 了&lt;/li&gt;
&lt;li&gt;没时间：定期 wp 版本升级和不定期清理被黑客开了后门的系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;博客静态化方案的成熟是放弃的最直接原因。简单尝试了 &lt;a class=&#34;link&#34; href=&#34;https://getpelican.com/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Pelican&lt;/a&gt;，就把博客换成静态网站了。&lt;/p&gt;
&lt;h2 id=&#34;过程记录&#34;&gt;过程记录
&lt;/h2&gt;&lt;h3 id=&#34;迁移-wp&#34;&gt;迁移 WP
&lt;/h3&gt;&lt;p&gt;&lt;a class=&#34;link&#34; href=&#34;https://blog.chenghu.me/bo-ke-qian-yi-wp-pelican.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://blog.chenghu.me/bo-ke-qian-yi-wp-pelican.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;WP 导出 Posts 工具很多，比如自带插件 &lt;a class=&#34;link&#34; href=&#34;https://wordpress.org/plugins/jekyll-exporter/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;jekyll-exporter&lt;/a&gt;，以 markdown 格式导出 posts, pages 和 comments，但需要 WP 实例运行正常；还比如 Pelican 自带的 pelican-import，但需要以 WP Export 出的XML为源，转换我这上千篇文章需要好几分钟，而且过程磕磕绊绊的(解决异常中断问题)。&lt;/p&gt;
&lt;p&gt;于是在 GitHub 上找了一些做参考，改写一个转换工具。3秒钟完成千篇文章转换。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/mlindgren/wp2octopress/blob/master/wp2octopress.py&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/mlindgren/wp2octopress/blob/master/wp2octopress.py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/jekyll/jekyll-import/blob/v0.10.0/lib/jekyll-import/importers/wordpress.rb&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/jekyll/jekyll-import/blob/v0.10.0/lib/jekyll-import/importers/wordpress.rb&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;构建-pelican-项目&#34;&gt;构建 Pelican 项目
&lt;/h3&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-bash&#34; data-lang=&#34;bash&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ pelican mkdir mysite &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; cd mysite
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mysite pelican-quickstart &lt;span style=&#34;color:#75715e&#34;&gt;# 按提示完成快速初始化--主要是写publishconf.py&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mysite pelican content &lt;span style=&#34;color:#75715e&#34;&gt;# 在output生成静态站点&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ mysite cd output &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; python -m SimpleHTTPServer &lt;span style=&#34;color:#75715e&#34;&gt;# 浏览器访问http://localhost:8000/&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;rsync-同步到服务器&#34;&gt;rsync 同步到服务器
&lt;/h3&gt;&lt;h2 id=&#34;参考资料&#34;&gt;参考资料
&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://docs.getpelican.com/en/3.6.3/quickstart.htm&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://docs.getpelican.com/en/3.6.3/quickstart.htm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://github.com/getpelican/pelican&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;https://github.com/getpelican/pelican&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://pelican-docs-zh-cn.readthedocs.io/en/latest/&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://pelican-docs-zh-cn.readthedocs.io/en/latest/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://haridas.in/wordpress-blog-migrated-to-pelican.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;http://haridas.in/wordpress-blog-migrated-to-pelican.html&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
        </item>
        
    </channel>
</rss>
